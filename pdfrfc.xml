<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc='yes' ?><!-- add table of contents -->
<?rfc editing='no' ?><!-- paragraph numbering -->
<?rfc symrefs='yes' ?><!-- use references like [ABC] instead of [1] -->
<?rfc sortrefs='no'?><!-- sort the references alphabetically -->
<?rfc linkmailto='no'?>
<?rfc compact='yes'?>
<?rfc comments='yes'?><!-- print crefs -->
<?rfc inline='yes'?>
<?rfc-ext parse-xml-in-artwork='yes' ?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<rfc ipr='trust200902'
     docName='draft-hansen-rfc-use-of-pdf-01' category='info' >
  <front>
    <title abbrev='PDF for RFCs'>PDF for an RFC Series Output Document Format</title>
    <author initials='T.' surname='Hansen' fullname='Tony Hansen' role='editor'>
      <organization>AT&amp;T Laboratories</organization>
      <address>
        <postal>
          <street>200 Laurel Ave. South</street>
          <city>Middletown</city>
          <region>NJ</region>
          <code>07748</code>
          <country>USA</country>
        </postal>
        <email>tony+rfc2pdf@maillennium.att.com</email>
      </address>
    </author>
    <author initials='L.' surname='Masinter' fullname='Larry Masinter'>
      <organization>Adobe</organization>
      <address>
	<postal>
	  <street>345 Park Ave</street>
	  <city>San Jose</city>
	  <region>CA</region>
	  <code>95110</code>
	  <country>USA</country>
	</postal>
        <email>masinter@adobe.com</email>
        <uri>http://larry.masinter.net</uri>
      </address>
    </author>
    <author initials='M.' surname='Hardy' fullname='Matthew Hardy'>
      <organization>Adobe</organization>
      <address>
	<postal>
	  <street>345 Park Ave</street>
	  <city>San Jose</city>
	  <region>CA</region>
	  <code>95110</code>
	  <country>USA</country>
	</postal>
	<email>mahardy@adobe.com</email>
      </address>
    </author>
    <date />
    <area>RFC Design Team</area>
    <keyword>Requests for Comment</keyword>
    <abstract>
      <t>
	This document discusses options and requirements for the PDF
	rendering of RFCs in the RFC Series, as outlined in RFC
	6949. It also discusses the use of PDF for Internet Drafts,
	and available or needed software tools for producing and
	working with PDF.
      </t>
    </abstract>
  </front>
  <middle>
    <section title='Introduction'>
      <t> The RFC Series is evolving, as outlined in <xref
      target='RFC6949'/>. Future documents will use an archival format
      of XML with renderings in various formats, including PDF.
      </t>

      <t>Because PDF has a wide range of capabilities and
      alternatives, not all PDFs are "equal".  For example, visually
      similar documents could consist of scanned or rasterized images,
      include text layout options, hyperlinks, embedded fonts, and
      digital signatures.  (See <xref target='pdf-history'/> for a
      brief history of PDF.)
      </t>

      <t> This document explains some of the relevant options and
      makes recommendations, both for the RFC series and Internet
      Drafts.</t>

      <t> The PDF format and the tools to manipulate it are
      not as well known as those for the other RFC formats, at least
      in the IETF community. This document
      discusses some of the processes for creating and using PDFs
      using both open source and commercial products.
      </t>

      <t>NOTE: see <eref target="https://github.com/masinter/pdfrfc"/> 
      for XML source, related files, and an issue tracker for
      this document.</t>
    </section>
    <section title='History and current use of PDF with RFCs and Internet Drafts'>
      <t>NOTE: this section is meant as an overview
      to give some background.</t>
      <section title='RFCs'>
	<t>The RFC series has for a long time accepted Postscript
	renderings of RFCs, either in addition to or instead of the
	text renderings of those same RFCs.  These have usually been
	produced when there was a complicated figure or mathematics
	within the document.  For example, consider the figures and
	mathematics found in RFCs 1119 and RFC 1142, and compare the
	figures found in the text version of RFC 3550 with those in
	the Postscript version.  The RFC editor has provided a PDF
	rendering of RFCs. Usually, this has been a print of the
	text file that does not take advantage of any of the broader
	PDF functionality, unless there was a Postscript version
	of the RFC, which would then be used by the RFC editor to 
	generate the PDF.
        </t>
      </section>
      <section title='Internet Drafts'>
	<t>In addition to PDFs generated and published by the RFC
	editor, the IETF tools community has also long supported PDF
	for Internet Drafts.  Most RFCs start with Internet Drafts,
	edited by individual authors.  The Internet drafts submission
	tool at https://datatracker.ietf.org/submit/ accepts PDF and
	Postscript files in addition to the (required) text submission
	and (currently optional) XML.  If a PDF wasn't submitted for a
	particular version of an Internet Draft, the tools would
	generate one from the Postscript, HTML, or text.</t>
      </section>
    </section>
    <section title='Options and Requirements for PDF RFCs' 
	     anchor='requirements'>
      <t>This section lays out options and requirements for PDFs produced by
      the RFC editor for RFCs. There are two sections:
      "Visible" options are related to how the PDF appears when
      it is viewed with a PDF viewer. "Internal Structure" options
      affect the ability to process PDFs in other ways, but do not
      control the way the document appears. (Of course, a viewer
      UI might display processing capabilities, such as showing
      if a document has been digitally signed.)</t>
      
      <t>In many cases, the choice of PDF requirements is heavily
      influenced by the capabilities of available tools to create
      PDFs. Most of the discussion of tooling is to be found in
      <xref target='tooling'/>.</t>
      <t>NOTE: each option in this section should outline the nature
      of the design choice, outline the pros and cons, and make a
      recommendation.</t>

      <section title='"Visible" requirements'>
	<t> PDF supports rich visible layout of fixed-sized pages.
	</t>
	<section title='General visible requirements'>
	  <t> For a consistent 'look' of RFC and good style, the PDFs
	  produced by the RFC editor should have a clear, consistent,
	  identifiable and easy-to-read
	  style. They should print well on the widest range of
	  printers, and look good on displays of varying
	  resolution.</t>
	</section>
	<section title='Page size, margins, headers and footers'>
	  <t>PDF files are laid out for a particular size
	    of page, margins, and any headers and footers
	    part of the layout.  There are two paper sizes
	    in common use: "US Letter" (8.5 x 11 inches, 216x279 mm, in
	    popular use in North America) and "A4" (210x297 mm, 8.27x11.7 inches,
	    standard for the rest of the world).
	    Usually PDF printing software is used in a "shrink to fit"
	    mode where the printing is adjusted to fit the paper in
	    the printer. Whatever page size is chosen, the margins
	    and header positioning will need to be chosen to look
	    good on both paper sizes using common printing methods.
	    In addition, for both Internet Drafts and RFCs, margins should
	    be the smallest consistent with the above requirement.
	  </t>
	  <t>Page headers and footers should contain similar
	    information as the headings in the current text versions
	    of documents, including page numbers, short title,
	    author, working group, but typeset in a lighter color, smaller
	    typeface, so as to be inobtrusive.
	  </t>
	</section>
	<section title='Similarity to other outputs'>
	  <t>There is some advantage to having the PDF files look like
	  the text or HTML renderings of the same document.  There are
	  several options even so. The PDF
	  <list style='numbers'>
	    <t>could look like the text version of the document, or</t>
	    <t>could look like the text version of the document but
	    with pictures rendered as pictures instead of using their
	    ASCII-art equivalent, or</t>
	    <t>could look like the HTML version.</t>
	  </list>
	  </t>
	  <t>Recommendation: the PDF rendition should look like the
	  HTML rendition, at least in spirit.  For example, some
	  differences from the HTML rendition might include different
	  typeface and size (chosen for printing), page numbers in the
	  table of contents, page headers and footers and headers.
	  </t>
	</section>
	<section title="Typeface choices">
	  <t> A PDF may refer to a font by name, or it may use an
	  embedded font.  When a font is not embedded, a PDF viewer
	  will attempt to locate a locally installed font of the same
	  name.  If it can not find an exact match, it will find a
	  "close match".  If a close match is not available, it will
	  fallback to something implementation dependent and 
	  usually undesirable.</t>
	  <t>Recommendation: for consistent viewing, all fonts should
	  be embedded.  </t>
	  <t>In addition, if the HTML version of the document is
	  being visually mimiced, the font(s) chosen should have
	  both variable width and constant width components, as well
	  as bold and italic representations.</t>
	  <t> The typefaces used by Internet Drafts and by RFCs
	  need not be identical. </t>
	  <t> Few fonts have glyphs for the entire repertoire of
	  Unicode characters; for this purpose, the PDF generation
	  tool may need a set of fonts and a way of choosing them.</t>
	  <t>Typefaces are typically licensed and, in many cases,
	  there is a fee for use by PDF creation tools; however,
	  not for display or print of the embedded fonts.  
	  </t>
	  <t> Recommendations:
	  <list style='symbols'>
	    <t> For readability when printed, the main body text
	    should be in a serif font and the headings in a sans-serif
	    font. </t>

	    <t> Code, BNF, and other text could use a fixed-width
	    font to aid in insuring alignment, e.g., in BNF.</t>

	    <t> Type faces used by the xml2rfc application
	    for Internet drafts should be freely available,
	    and included with the xml2rfc application. </t>

	    <t> The range of Unicode characters allowed in
	    the XML source for Internet Drafts and RFCs may
	    be bounded by the availability of embeddable fonts with 
	    appropriate glyphs.</t>

	  </list>

	</t>
	</section>
	<section title='Embedding of Fonts'>
	  <t>The PDF/A standards mandate the embedding
	  of fonts. Preferably, the software generating the files
	  would produce PDF/A-conforming files directly, thus ensuring
	  that all glyphs include Unicode mappings and embedded fonts
	  from the outset.</t>

	</section>


	<section title='Hyperlinks'>
	  <t>PDF supports hyperlinks both to sections of the same
	  document and to other documents.</t>
	  <t>The conversion to PDF can generate:
	  <list style='symbols'>
	    <t>hyperlinks within the document</t>
	    <t>hyperlinks to external locations</t>
	    <t>hyperlinks within a table of contents</t>
	  </list>
	  </t>
	  <t>
	  Where should hyperlinks to RFCs point? to the info page for
	  the RFC? to the PDF version of the RFC?  (NOTE: the RFC
	  Series Editor has stated a preference for them to point to
	  the info page for the RFC.)  Similar questions need to be
	  answered on references to internet drafts: Where should
	  hyperlinks to internet drafts point?  To the datatracker
	  entry?  To the tools entry?  To a PDF version of the
	  internet draft?</t>

	  <t>Recommendations: 
	  <list style='symbols'>

	    <t>All hyperlinks available in the HTML rendition of the
	    RFC should also be visible and active in the PDF
	    produced.</t>
	    <t>Table of contents, including page numbers, are useful
	    when printed. These should be hyperelinked.</t>
	    <t>Hyperlinks to RFCs and Internet drafts from the
	    references section should point to a "landing" page which
	    then links to the various formats available.</t>
	  </list></t>
	</section>
      </section>
      <section title='"Invisible" options and requirements'>
	<t>PDF offers a number of features which improve the utility
	of PDF files in a variety of workflows, at the cost of extra
	effort in the xml2rfc conversion process; the tradeoffs may be
	different for the RFC editor production of RFCs and for
	Internet Drafts.</t>

	<section title='Internal Text Representation' anchor='internal'>
	  <t> The contents of a PDF file can be represented in many
	  ways.  The PDF file could be generated:
	  <list style='symbols'>

	    <t>as an image of the visual representation, such as a
	    JPEG image of the word 'IETF'</t>

	    <t>placing individual characters in position on the page,
	    such as saying "put an 'F' here", then "put an 'T' before
	    it", then "put an 'E' before that", then "put an 'I'
	    before that" to render the word 'IETF'</t>

	    <t>placing words in position on the page, such as keeping
	    the word 'IETF' would be kept together, and</t>

	    <t>insuring that the running order of text in the content
	    stream matches logical reading order, e.g., keeping the
	    sentence 'The Internet Engineering Task Force (IETF)
	    supports the Internet.' together as a sentence.</t>

	    <t>A "role map" feature of PDF would allow mapping the
	    logical tags found in the original XML into tags in the
	    PDF.</t>
	    
	  </list>
	  </t>

	  <t>All of these end up with essentially the same visual
	  representation of the output.  However, each level has
	  tradeoffs for auxiliary uses, such as searching or indexing,
	  commenting and annotation, and accessibility
	  (text-to-speech).</t>

	  <t>Recommendations:
	  <list style='symbols'>
	    
	    <t>Text in content streams should follow the XML
	    document's logical order (in the order of tags) to the
	    extent possible.  This will provide optimal reuse by
	    software that does not understand Tagged PDF.
	    (PDF/UA requires this.)</t>

	    <t>We should investigate the use of role-maps to capture
	    more of the xml2rfc source structure, to the point where
	    it might even be possible to reconstruct much or all of
	    the source. However, there is not a compelling use case
	    over embedding the original XML, as described in <xref
	    target='embedXML' />. </t>

	  </list>
	</t>
      </section>

      <section title='Unicode Support'>
	<t> PDF itself does not require use of Unicode.  Text is
	represented as a sequence of glyphs which then can be
	mapped to Unicode. </t>
	<t>Recommendations:
	<list>
	  <t>PDF files generated must have the full text,
	  as it appears in the original XML.</t>
	  <t>Unicode normalization may occur.</t>
	  <t>Text within SVG for SVG images should
	  also have Unicode mappings.</t>
	  <t>Alt-text for  images should also have Unicode.</t>
	</list></t>
      </section>

      <section title='Text description of images (alt-text)'>
	<t>NOTE: This section should describe how alt-text
	for images is presented in PDF....TBD</t>
      </section>

      <section title='Metadata Support'>
	<t>Metadata encodes information about the document authors,
	the document series, date created, etc. using the RDF Dublin
	core (and other elements).  Having this metadata within the
	PDF file allows it to be used by search engines, viewers and
	other reuse tools.
	</t>

	<t>PDF supports embedded metadata using XMP <xref target='XMP'
	/>, the Extensible Metadata Platform (XMP).

	</t>
	<t>
	  Recommendation: The PDFs generated should have all of the
	  metadata from the XML version embedded directly as XMP
	  metadata, including the author and date information, set the
	  document series, and a URL for where the document can be
	  retrieved.
	</t>
      </section>
      <section title='Document Structure Support'>
	<t>PDF supports an 'outline' feature where sections of the
	document are marked; this oould be used in addition to the
	table of contents as a navigation aid.</t>
	<t>
	  The section structure of an RFC can be mapped into the PDF
	  elements for the document structure. 

	  This will allow the
	  bookmark feature of PDF readers to be used to quickly access
	  sections of the document.
	</t>
	<t>
	  Requirement: The section structure of an RFC should be
	  mapped into the PDF elements for the document structure.
	  This would include section headings for the boilerplate
	  sections such as the Abstract, Status of the Document, Table
	  of Contents, and Author Addresses.
	</t>
      </section>

      <section title='Tagged PDF'>
	<t>
	  NOTE: say more about the use of alternative texts for
	  images, tagging text spans, and
	  providing replacement texts for symbols and images.  A
	  role-map could be provided here to map the logical tags
	  found in the RFC XML to the standard tagset for PDF.  This
	  could be included in the generated PDF.
	</t>
      </section>

      <section title='Embedded Files' anchor='embedXML'>
	<t>PDF has the capability of including other files;
	the files may be labeled both by a media type and a 
	role, the AFRelationship key <xref target='PDFA3'/>.
	In this way, the PDF file acts also as a container.</t>
	<t>Embedded content may be compressed.</t>
	<t>Many PDF viewers support the ability to
	view and extract embedded files, although this capability
	is not universal.</t>
	<t>Embedding content in the PDF file allows the PDF to act as
	a complete package, which can be transformed, archived,
	digitally signed. Useful possibilities:

	<list>
	  <t>Embed the source XML input file itself within the PDF.
	  If the source SVG and images for illustrations are also
	  embedded, this would make the PDF file totally
	  self-referential.</t>
	  <t>Embed directly extractable components that are useful for
	  independent processing, including ABNF, MIBs, source code
	  for reference implementations.  This capability might be
	  supported through other mechanisms from the XML source
	  files, but could also be supported within the PDF. </t>
	</list>
	</t>
	<t>
	  Recommendations: 
	  <list>
	    <t>Embed the XML source and all illustrations,
	    for both RFCs and Internet Drafts, as a standard
	    feature for xml2rfc's PDF output.</t>

	    <t>Finding, extracting and embedding other components
	    will require additional markup to clearly identify them,
	    and additional review to insure the correctness of
	    embedded files which are not visible.</t>
	  </list>
	</t>
      </section>

      </section>
      <section title='Digital Signatures'>
	<t>
	  PDF has supported digital signatures since PDF 1.2.  There
	  are multiple methods for signing PDF files.  The signature
	  is intended to apply not only to the bits in the file (that
	  they haven't been modified) but also to lock down the
	  visual presentation as well.
	</t>

	<t>Normally, the authenticity of RFC files is not an issue,
	since the RFC editor maintains a repository of all RFCs which
	is widely replicated. However, the RFC Editor and staff are at
	times called to provide evidence that a particular RFC is the
	'original' and has not been visually modified, and there
	may be other use cases.</t>

	<t>
	  Recommendation: The use cases for digital signatures need
	  further review, including management of certificates for the
	  RFC editor function. PDFs produced by the RFC editor likely
	  SHOULD be signed. As signatures also apply to embedded
	  content, this will provide a way of signing the source XML
	  as well.  There is no need for digital signatures on
	  Internet Drafts.
	</t>
      </section>
    </section>
    <section title='Tooling' anchor='tooling'>

      <t>This section discusses tools for viewing, comparing,
      creating, manipulating, transforming PDF files, including those
      currently in use by the RFC editor and Internet drafts, as well
      as outlining available PDF tools for various processes.</t>

    <section title='PDF Viewers'>
      <t>As with most file formats, PDF files are experienced through
      a reader or viewer of PDF files, and there are numerous
      viewers. One partial list of PDF viewers can be found at <eref
      target='http://en.wikipedia.org/wiki/List_of_PDF_software#Viewers'/>.
      </t>

      <t>PDF viewers vary in capabilities, and it is important to note
      which PDF viewers support the features utilized in PDF RFCs and
      Internet drafts (features such as links, digital signatures,
      Tagged PDF and others mentioned in <xref
      target='requirements'/>).
      </t>

      <t>A survey of the IETF community might broaden the list
      of viewers in common use, but an initial list to consider
      include some that are currently maintained and supported
      viewers and legacy systems. Maintained viewers include:

      <list style='hanging'>

	<t hangText='Adobe Reader'>
	Multiple platforms. Supports all of the features on most platforms.</t>

	<t hangText='Google Chrome'>
	  Multiple platforms. Web browser which includes PDF support.
	  Rapidly moving target, open source.
	</t>
	<t hangText='PDF.js'>
	  Multiple platforms. A JavaScript library to convert PDF
	  files into HTML5, usable as a web-based viewer that can be
	  included in web browsers. Used by Mozilla Firefox.
	  Also rapidly moving target.
	</t>
	<t hangText='Foxit Reader'>
	  Multiple platforms. PDF Viewer / Reader for Desktop computer
	  and Mobile Devices.  Recently licensed by Google, and the
	  code for this purpose was made open source; see
	  <eref target="http://www.i-programmer.info/news/136-open-source/7433-google-open-sources-pdf-software-library.html" />.
	</t>
      </list>
      </t>

      <t>Several 'legacy' viewers to consider include:
      Ghostview, Xpdf. 
      </t>
    </section>
    <section title='Printers'>
      <t>While almost all viewers also support printing of
      PDF files, printing is one of the most important use
      cases for PDFs. Some printers have direct PDF
      support. </t>
    </section>
    
    <section title='PDF generation libraries'>
      <t>Because the xml2rfc format is a unique format,
      software for converting XML source documents to
      the various formats will be needed, including
      PDF generation.</t>
      <t>
	One promising
	direction is suggested in
	<eref target="http://greenbytes.de/tech/webdav/rfc2629xslt/rfc2629xslt.html#output.pdf.fop"/>: using
	XSLT to generate XSL-FO which is then processed by a formatting object processor such as Apache FOP.
      </t>
   </section>
    
    <section title='Other Tools'>
    <t>In addition to generating and viewing PDF, other categories of
    PDF tools are available and may be useful both during
    specification development and for published RFCs.
    </t>
    <t>These include tools for comparing two PDFs, checkers that could
    be used to validate the results of conversion, review and comment
    tools which attach annotations to PDF files, digital signature
    creation and validation.</t>
    <t>Validation of an arbitrary author-generated PDF file
    would be quite difficult; there are few PDF validation
    tools. However, if internet drafts and RFCs are generated by
    conversion from XML via xml2rfc, then explicit validation of PDF
    and adherance to expected profiles would mainly be useful to insure
    xml2rfc has functioned properly.</t>
    <t>Recommendations:
    <list style='symbols'>
      <t>Discourage (but allow) submission of a PDF representation
      for Internet Drafts. In most cases, the PDF for an Internet
      draft should be produced automatically when XML is suhmitted,
      with an opportunity to verify the conversion. </t>
      <t>The RFC editor should create PDF files from the XML
      rather than accepting PDFs from the author.</t>
    </list>
    </t>
    </section>
  </section>

  <section title='Choosing PDF versions and standards'>

    <t> PDF has gone through several revisions, primarily addition of
    features, as noted in in <xref target='pdf-history'/>.  PDF
    features have generally been added in a way that older viewers
    'fail gracefully', but even so, the older the PDF version
    produced, the more legacy viewers will support that version,
    but the fewer features will be enabled.
    </t>
    <t>As PDF has evoled a broad set capabilities, additional
    standards for PDF files are applicable. These standards
    establish ground rules that are important for specific
    applications.  For example PDF/X was specifically designed
    for Prepress digital data exchange, with careful attention
    to color management and printing instructions, while PDF/E
    standard was designed for engineering documents.</t>
    <t>Two additional standards families are important to the
    RFC format, though: long-term preservation (PDF/A), and user
    acessibility (PDF/UA). These standards are then supported
    by various software libraries and tools.</t>

    <t>It is effective and useful to use these standards to capture
    PDF for RFC requirements, and they will make the PDF files useful
    in workflows that expect them.</t>

    <t>Recommendations:
    <list>
      <t> Choose PDF 1.7; although relatively recent, it is well
      supported by widely available viewers.</t>

      <t> Require PDF/A3 for RFCs. It captures the archivability and
      long-term stability of PDF 1.7 files. 
      Use PDF/A3 for embedding additional data (incluing
      the source files) in RFCs and Internet Drafts.</t>
      <t> Require PDF/UA for RFCs.</t>
    </list>
    </t>
  </section>
  
</middle>
<back>
  <references>
    <!-- ?rfc include='reference.ISO.32000-1.2008' ? -->
    <reference anchor="PDF">
      <front>
	<title>
	  Portable document format -- Part 1: PDF 1.7
	</title>
	  <author>
	    <organization>ISO</organization>
	  </author>
	  <date month="" year="2008"/>
      </front>
      <seriesInfo name="ISO" value="32000-1"/>
      <annotation>Also available free from Adobe.</annotation>
    </reference>
    
    <!-- rfc include='reference.ISO.16684-1.2012' XMP -->
    <reference anchor="XMP">
      <front>
	<title>Extensible metadata platform (XMP) specification --
	Part 1: Data model, serialization and core properties
	</title>
	<author><organization>ISO</organization></author>
	<date month="" year="2012"/>
      </front>
      <seriesInfo name="ISO" value="16684-1"/>
      <annotation>Not available free, but there
      are a number of descriptive resources, e.g.,
      <eref 
	  target="http://en.wikipedia.org/wiki/Extensible_Metadata_Platform"/>
      </annotation>	
    </reference>
    
    <!-- rfc include='reference.ISO.19005-2.2012' PDF/A2 -->
    <reference anchor="PDFA2">
      <front>
	<title>Electronic document file format for long-term
	preservation -- Part 2: Use of ISO 32000-1 (PDF/A-2).
	</title>
	<author><organization>ISO</organization></author>
	<date month="" year="2011" />
	</front>
	<seriesInfo name="ISO" value="19005-2" />
    </reference>

    <!-- rfc include='reference.ISO.19005-3.2012' PDF/A3 -->
    <reference anchor="PDFA3">
      <front>
	<title>Electronic document file format for long-term
	preservation -- Part 3: Use of ISO 32000-1 with support for
	embedded files (PDF/A-3)
	</title>
	<author><organization>ISO</organization></author>
	<date month="" year="2012" />
      </front>
      <seriesInfo name="ISO" value="19005-3" />
    </reference>

    <!-- rfc include='reference.ISO.14289-1.2012' PDF/UA -->
    <reference anchor="PDFUA">
      <front>
	  <title>Electronic document file format enhancement for
	  accessibility -- Part 1: Use of ISO 32000-1
	  (PDF/UA-1)</title>
	  <author><organization>ISO</organization></author>
	  <date month="" year="2012" />
      </front>
	<seriesInfo name="ISO" value="19005-3" />
    </reference>
  </references>
  <references title='Informative References'>
    <?rfc include='reference.RFC.3778' ?>
    <?rfc include='reference.RFC.6949' ?>
    
  </references>
  <section title='A Synopsis of PDF Format History' anchor='pdf-history'>
    <t>
      <xref target='RFC3778'/> contains some history of PDF.
      This is a capsule view, plus additional information on events that have occurred since the publication 
      of <xref target='RFC3778'/>. NOTE: currently doesn't talk about the handoff of change control to ISO 
	  and the evolution as an ISO standard 32000. Plans are to update the application/pdf MIME registration 
	  to include this information, and then point to that.
	</t>
	<t>
	  The Portable Document Format (PDF) family of document formats was invented by Adobe Systems in the early 
	  1990s.
	  At the time, it was a proprietary format that underwent a variety of revisions that matched the release 
	  of different versions of
	  the Adobe Acrobat products.
	  For example, Acrobat 1 supported PDF version 1.0, Acrobat 2 supported PDF version 1.1, Acrobat 5 supported PDF version 1.4, etc.
	  <eref target='http://www.adobe.com/devnet/pdf/pdf_reference_archive.html'/>
	</t>
	<t>
	  Each release (and extension level) introduced new features.
	  For example, (1.0) character, word and image rendering, externally-referenced or embedded fonts, (1.1) passwords, encryption,
	  device-independent color, (1.2) interactive forms, unicode, signatures, compression, (1.3) web semantic capture, embedded files,
	  Adobe javascript, (1.4) metadata streams, tagged PDF, (1.5) controllable hiding of sections, slideshows, (1.6) 3D artwork,
	  OpenType font embedding, linking into embedded files, and (1.7) video and audio support.
	  After release 1.7, additional Extension Levels have been introduced.
	  Each release also provided enhancements to the previous support.
	  For example, encryption was introduced in 1.1, but AES encryption wasn't supported until 1.7 extension level 3.
	  A PDF reader for PDF 1.1 is not able to read and display a PDF 1.7 file, but a PDF reader for PDF 1.7 can also handle all
	  previous versions of PDF.
	  The wikipedia page at  <eref target='http://en.wikipedia.org/wiki/PDF'/> has a nice summary table going into further details.
	</t>
	<section title='PDF Profiles' anchor='profiles'>
	  <t>
	    Certain profiles or subsets of PDF have been standardized.
	    PDF/X (X for Exchange), PDF/A (A for Archive), PDF/E (E for Engineering), PDF/VT (VT for Variables and Transactions), and PDF/UA
	    (UA for Universal Access) all have ISO standards associated with them.
	    Of particular potential interest to the RFC community are PDF/A and PDF/UA.
	  </t>
	  <section title='PDF/A'>
	  <t>
	    PDF/A in turn has nuances, as there have been a couple updates to it and conformance levels within each version.
	    PDF/A-1 was based on PDF release 1.4.
	    PDF/A-2 was based on PDF release 1.7, and PDF/A-3 adds embedded arbitrary files.
	    PDF/A is considered a profile because it mandates that certain optional features be used.
	    At a high level, the conformance levels are B (basic), U (mandatory unicode mapping [not in PDF/A-1]) and A (accessible).
	    The requirements for conformance level A are that: the document structure must be represented within the PDF (e.g., section
	    headings, table cells, paragraph divisions), tagged PDF is used (e.g.,  element anchors) and that language tags be used where
	    appropriate.
	    When referring to PDF/A, you would refer to the version and conformance level.
	    So PDF/A-1A would be the profile for the Accessible conformance level of version 1 of PDF/A, which was based on PDF 1.4.
	  </t>
	</section>
	<section title='PDF/UA'>
	  <t>
	    The PDF/UA (Universal Access) profile is orthogonal to the other profiles, specifying user accessibility requirements.
	    It places some restrictions on the other profiles, such as requiring the use of higher-level constructs for the textual representation
	    and adds additional requirements for programatic access (think automatic readers for the blind).
	  </t>
	</section>
	</section>
	<section title='Additional Reading'>
	  <t>
	    <eref target='http://www.pdflib.com/fileadmin/pdflib/pdf/whitepaper/Whitepaper-Technical-Introduction-to-PDFA.pdf'/>
	    <eref target='http://www.pdfa.org/wp-content/uploads/2011/08/tn0003_metadata_in_pdfa-1_2008-03-128.pdf'/>
	    <eref target='http://www.pdfa.org/wp-content/uploads/2011/08/PDFA-in-a-Nutshell_1b.pdf'/>
	    <eref target='http://www.pdfa.org/2011/08/pdfa-%E2%80%93-a-look-at-the-technical-side/'/>
	    <eref target='http://pdf.editme.com/pdfa'/>
	  </t>
	</section>
      </section>
      <section title='Acknowledgements'>
      	<t>
      	The input of the following people is gratefully acknowledged:
	Brian Carpenter,
	Chris Dearlove,
	Martin Duerst,
	Joe Hildebrand,
	Duff Johnson,
	Leonard Rosenthal,
	....
      	</t>
      </section>
  </back>
</rfc>
